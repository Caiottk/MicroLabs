


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Ver 1 19/03/2018
    5 00000000         ; Ver 2 26/08/2018
    6 00000000         ; Este programa deve esperar o usuário pressionar uma ch
                       ave.
    7 00000000         ; Caso o usuário pressione uma chave, um LED deve piscar
                        a cada 1 segundo.
    8 00000000         
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         
   13 00000000         ; Declarações EQU - Defines
   14 00000000         ;<NOME>         EQU <VALOR>
   15 00000000         ; ========================
   16 00000000         ; Definições de Valores
   17 00000000         
   18 00000000 00000008 
                       VECT_SIZE
                               EQU              8
   19 00000000         ; ------------------------------------------------------
                       -------------------------
   20 00000000         ; Área de Dados - Declarações de variáveis
   21 00000000                 AREA             DATA, ALIGN=2
   22 00000000         ; Se alguma variável for chamada em outro arquivo
   23 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   24 00000000         ; partir de outro arquivo
   25 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   26 00000000         ; de <tam> bytes a partir da primeira 
   27 00000000         ; posição da RAM  
   28 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 2 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 6 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 7 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       offset  SPACE            0x400
   29 00000400 00 00 00 
              00 00 00 
              00 00    vect    SPACE            VECT_SIZE
   30 00000408 00      vectItr SPACE            0x1
   31 00000409 00      onesInNum
                               SPACE            0x1
   32 0000040A 00      tensInNum
                               SPACE            0x1
   33 0000040B         ; ------------------------------------------------------
                       -------------------------
   34 0000040B         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   35 0000040B         ;                  código
   36 0000040B                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   37 00000000         
   38 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   39 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   40 00000000         ; outro arquivo. No caso startup.s
   41 00000000         
   42 00000000         ; Se chamar alguma função externa 
   43 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   44 00000000         ; função <func>
   45 00000000                 IMPORT           PLL_Init
   46 00000000                 IMPORT           SysTick_Init
   47 00000000                 IMPORT           SysTick_Wait1ms
   48 00000000                 IMPORT           GPIO_Init
   49 00000000                 IMPORT           LightUp7SegLeft
   50 00000000                 IMPORT           LightUp7SegRight
   51 00000000                 IMPORT           LightUpLEDs



ARM Macro Assembler    Page 8 


   52 00000000                 IMPORT           GetPushBtnsState
   53 00000000                 IMPORT           DisableAllLEDs
   54 00000000         
   55 00000000         
   56 00000000         ; ------------------------------------------------------
                       -------------------------
   57 00000000         ; Função main()
   58 00000000         Start
   59 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   60 00000004 F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o
                                                             SysTick
   61 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   62 0000000C F000 F86D       BL               InitilizeVars
   63 00000010         ;-------------------------------------------------------
                       -------------------------
   64 00000010         MainLoop
   65 00000010         
   66 00000010 F7FF FFFE       BL               GetPushBtnsState
   67 00000014 4601            MOV              R1, R0
   68 00000016 2801            CMP              R0, #2_01
   69 00000018 BF08            IT               EQ
   70 0000001A F000 F81F       BLEQ             atualizaBaseAtual
   71 0000001E 2902            CMP              R1, #2_10
   72 00000020 BF08            IT               EQ
   73 00000022 F000 F82C       BLEQ             atualizaFatorMultiplicativo
   74 00000026         
   75 00000026 4937            LDR              R1, =vectItr ; Lights up the LE
                                                            D's with the given 
                                                            numbers
   76 00000028 4A37            LDR              R2, =tensInNum
   77 0000002A 4B38            LDR              R3, =onesInNum
   78 0000002C 7808            LDRB             R0, [R1]
   79 0000002E F7FF FFFE       BL               LightUpLEDs
   80 00000032 F04F 0001       MOV              R0, #1
   81 00000036 F7FF FFFE       BL               SysTick_Wait1ms
   82 0000003A 7810            LDRB             R0, [R2]
   83 0000003C F7FF FFFE       BL               LightUp7SegLeft
   84 00000040 F04F 0001       MOV              R0, #1
   85 00000044 F7FF FFFE       BL               SysTick_Wait1ms
   86 00000048 7818            LDRB             R0, [R3]
   87 0000004A F7FF FFFE       BL               LightUp7SegRight
   88 0000004E F04F 0001       MOV              R0, #1
   89 00000052 F7FF FFFE       BL               SysTick_Wait1ms
   90 00000056 F7FF FFFE       BL               DisableAllLEDs
   91 0000005A         
   92 0000005A E7D9            B                MainLoop
   93 0000005C         
   94 0000005C         ; ****************************************
   95 0000005C         ;Função que itera a base atual
   96 0000005C         ; ****************************************
   97 0000005C         atualizaBaseAtual
   98 0000005C B500            PUSH{LR}
   99 0000005E F000 F83C       BL               espera_200ms



ARM Macro Assembler    Page 9 


  100 00000062 F85D EB04       POP{LR}
  101 00000066 4A27            LDR              R2, =vectItr
  102 00000068 7814            LDRB             R4, [R2]
  103 0000006A         
  104 0000006A F004 0407       AND              R4, R4, #7  ; R2 = i mod 8
  105 0000006E 1C64            ADDS             R4, R4, #1  ; R2 = (i mod 8) + 
                                                            1
  106 00000070         
  107 00000070 7014            STRB             R4, [R2]
  108 00000072         
  109 00000072 B500            PUSH{LR}
  110 00000074 F000 F81B       BL               multiplyBases
  111 00000078 F85D EB04       POP{LR}
  112 0000007C         
  113 0000007C 4770            BX               LR
  114 0000007E         
  115 0000007E         ;-------------------------------------------------------
                       -------------------------
  116 0000007E         ; ****************************************
  117 0000007E         ;Função que itera o fator multiplicativo
  118 0000007E         ; ****************************************
  119 0000007E         atualizaFatorMultiplicativo
  120 0000007E B500            PUSH{LR}
  121 00000080 F000 F82B       BL               espera_200ms
  122 00000084 F85D EB04       POP{LR}
  123 00000088         
  124 00000088 4D1E            LDR              R5, =vectItr ; Carrega i
  125 0000008A 782D            LDRB             R5, [R5]
  126 0000008C F1A5 0501       SUB              R5, R5, #1
  127 00000090         
  128 00000090 4A1F            LDR              R2, =vect   ; Carrega o conteúd
                                                            o de Vect[i]
  129 00000092 442A            ADD              R2, R2, R5
  130 00000094 7814            LDRB             R4, [R2]
  131 00000096         
  132 00000096 F104 0401       ADD              R4, R4, #1  ; Atualiza o conteú
                                                            do de Vect[i] para 
                                                            (Vect[i] +1) mod 10
                                                            
  133 0000009A 2C0A            CMP              R4, #10
  134 0000009C BFA8            IT               GE
  135 0000009E 2400            MOVGE            R4, #0
  136 000000A0         
  137 000000A0 7014            STRB             R4, [R2]
  138 000000A2         
  139 000000A2 B500            PUSH{LR}
  140 000000A4 F000 F803       BL               multiplyBases
  141 000000A8 F85D EB04       POP{LR}
  142 000000AC         
  143 000000AC 4770            BX               LR
  144 000000AE         
  145 000000AE         ;-------------------------------------------------------
                       -------------------------
  146 000000AE         ; Multiplies the bases and stores the decimal places in 
                       the correct mem position
  147 000000AE         multiplyBases
  148 000000AE 4D15            LDR              R5, =vectItr ; Carrega i
  149 000000B0 782D            LDRB             R5, [R5]
  150 000000B2 F1A5 0601       SUB              R6, R5, #1



ARM Macro Assembler    Page 10 


  151 000000B6         
  152 000000B6 4A16            LDR              R2, =vect   ; Carrega o conteúd
                                                            o de Vect[i]
  153 000000B8 4432            ADD              R2, R2, R6
  154 000000BA 7814            LDRB             R4, [R2]
  155 000000BC         
  156 000000BC FB04 F605       MUL              R6, R4, R5
  157 000000C0         
  158 000000C0 F04F 050A       MOV              R5, #10     ; Puts the division
                                                             result in R4
  159 000000C4 FBB6 F4F5       UDIV             R4, R6, R5
  160 000000C8         
  161 000000C8 FB04 F705       MUL              R7, R4, R5  ; Puts remainder in
                                                             R5
  162 000000CC EBA6 0507       SUB              R5, R6, R7
  163 000000D0         
  164 000000D0 4A0D            LDR              R2, =tensInNum ; Saves them in 
                                                            the correct places
  165 000000D2 7014            STRB             R4, [R2]
  166 000000D4 4A0D            LDR              R2, =onesInNum
  167 000000D6 7015            STRB             R5, [R2]
  168 000000D8         
  169 000000D8 4770            BX               LR
  170 000000DA         
  171 000000DA         ;-------------------------------------------------------
                       -------------------------
  172 000000DA         espera_200ms
  173 000000DA         ; ****************************************
  174 000000DA         ;Função que cria um atraso de 0,5s entre o aperto du pus
                       hButton e seu tratamento
  175 000000DA         ; ****************************************
  176 000000DA F04F 00C8       MOV              R0, #200
  177 000000DE B500            PUSH             {LR}
  178 000000E0 F7FF FFFE       BL               SysTick_Wait1ms
  179 000000E4 F85D EB04       POP              {LR}
  180 000000E8         
  181 000000E8 4770            BX               LR
  182 000000EA         
  183 000000EA         ;-------------------------------------------------------
                       -------------------------
  184 000000EA         ; Initializes the first array pos and the multiplicator 
                       factor with 1, as requested
  185 000000EA         InitilizeVars
  186 000000EA 4909            LDR              R1, =vect
  187 000000EC F04F 0201       MOV              R2, #1
  188 000000F0 700A            STRB             R2, [R1]
  189 000000F2 4904            LDR              R1, =vectItr
  190 000000F4 700A            STRB             R2, [R1]
  191 000000F6         
  192 000000F6 B500            PUSH{LR}
  193 000000F8 F7FF FFD9       BL               multiplyBases
  194 000000FC F85D EB04       POP{LR}
  195 00000100         
  196 00000100 4770            BX               LR
  197 00000102         
  198 00000102         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  199 00000102         ; Fim do Arquivo



ARM Macro Assembler    Page 11 


  200 00000102         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  201 00000102 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  202 00000104                 END                          ;Fim do arquivo
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\main.d -o.\objects\main.o -IC:\Users\joaov\AppData\Local\Arm
\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1" -
-predefine="__UVISION_VERSION SETA 538" --predefine="TM4C1294NCPDT SETA 1" --li
st=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: DATA unused
offset 00000000

Symbol: offset
   Definitions
      At line 28 in file main.s
   Uses
      None
Comment: offset unused
onesInNum 00000409

Symbol: onesInNum
   Definitions
      At line 31 in file main.s
   Uses
      At line 77 in file main.s
      At line 166 in file main.s

tensInNum 0000040A

Symbol: tensInNum
   Definitions
      At line 32 in file main.s
   Uses
      At line 76 in file main.s
      At line 164 in file main.s

vect 00000400

Symbol: vect
   Definitions
      At line 29 in file main.s
   Uses
      At line 128 in file main.s
      At line 152 in file main.s
      At line 186 in file main.s

vectItr 00000408

Symbol: vectItr
   Definitions
      At line 30 in file main.s
   Uses
      At line 75 in file main.s
      At line 101 in file main.s
      At line 124 in file main.s
      At line 148 in file main.s
      At line 189 in file main.s

6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: .text unused
InitilizeVars 000000EA

Symbol: InitilizeVars
   Definitions
      At line 185 in file main.s
   Uses
      At line 62 in file main.s
Comment: InitilizeVars used once
MainLoop 00000010

Symbol: MainLoop
   Definitions
      At line 64 in file main.s
   Uses
      At line 92 in file main.s
Comment: MainLoop used once
Start 00000000

Symbol: Start
   Definitions
      At line 58 in file main.s
   Uses
      At line 39 in file main.s
Comment: Start used once
atualizaBaseAtual 0000005C

Symbol: atualizaBaseAtual
   Definitions
      At line 97 in file main.s
   Uses
      At line 70 in file main.s
Comment: atualizaBaseAtual used once
atualizaFatorMultiplicativo 0000007E

Symbol: atualizaFatorMultiplicativo
   Definitions
      At line 119 in file main.s
   Uses
      At line 73 in file main.s
Comment: atualizaFatorMultiplicativo used once
espera_200ms 000000DA

Symbol: espera_200ms
   Definitions
      At line 172 in file main.s
   Uses
      At line 99 in file main.s
      At line 121 in file main.s

multiplyBases 000000AE




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: multiplyBases
   Definitions
      At line 147 in file main.s
   Uses
      At line 110 in file main.s
      At line 140 in file main.s
      At line 193 in file main.s

8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

VECT_SIZE 00000008

Symbol: VECT_SIZE
   Definitions
      At line 18 in file main.s
   Uses
      At line 29 in file main.s
Comment: VECT_SIZE used once
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

DisableAllLEDs 00000000

Symbol: DisableAllLEDs
   Definitions
      At line 53 in file main.s
   Uses
      At line 90 in file main.s
Comment: DisableAllLEDs used once
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 48 in file main.s
   Uses
      At line 61 in file main.s
Comment: GPIO_Init used once
GetPushBtnsState 00000000

Symbol: GetPushBtnsState
   Definitions
      At line 52 in file main.s
   Uses
      At line 66 in file main.s
Comment: GetPushBtnsState used once
LightUp7SegLeft 00000000

Symbol: LightUp7SegLeft
   Definitions
      At line 49 in file main.s
   Uses
      At line 83 in file main.s
Comment: LightUp7SegLeft used once
LightUp7SegRight 00000000

Symbol: LightUp7SegRight
   Definitions
      At line 50 in file main.s
   Uses
      At line 87 in file main.s
Comment: LightUp7SegRight used once
LightUpLEDs 00000000

Symbol: LightUpLEDs
   Definitions
      At line 51 in file main.s
   Uses
      At line 79 in file main.s
Comment: LightUpLEDs used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 45 in file main.s
   Uses
      At line 59 in file main.s
Comment: PLL_Init used once
SysTick_Init 00000000

Symbol: SysTick_Init



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 46 in file main.s
   Uses
      At line 60 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 47 in file main.s
   Uses
      At line 81 in file main.s
      At line 85 in file main.s
      At line 89 in file main.s
      At line 178 in file main.s

9 symbols
360 symbols in table
